Java中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类,Object是所有类的祖先类，而除了Object外，所有类必须有一个父类

最常使用的两个关键字是extends和implements。


Final修饰符 （final:最终）
	Final变量能被显式地初始化并且只能初始化一次。
	Final变量：
		被声明为final的对象的引用不能指向不同的对象。但是final对象里的数据可以被改变。
		pubilc class Test{
			final int value = 10;
			public void changeValue(){
			     value = 12; //将输出一个错误
			  }
		}
		
		Final修饰符通常和static修饰符一起使用来创建类常量。
			public static final int NUMBER = 100;
			static final String TIME ='1990年'
	Final方法：
		类中的Final方法可以被子类继承，但是不能被子类修改。
		声明final方法的主要目的是防止该方法的内容被修改。

Abstract修饰符（抽象类）
	抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。

	一个类不能同时被abstract和final修饰；
	如果一个类包含抽象方法，那么该类一定要声明为抽象类，否则将出现编译错误。
	抽象类可以包含抽象方法和非抽象方法。

	抽象方法
		抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。抽象方法不能被声明成final和strict。


数据结构
=============================================================
HashMap
========
HashMap 是 Map 接口的常用实现类
HashSet 是 Set 接口的常用实现类
	HashMap<String , Double> map = new HashMap<String , Double>();   
	map.put("语文" , 80.0);
	map.put("数学" , 89.0);
	map.put("英语" , 78.2);

	Map<String, Object> resultMap = new HashMap<String, Object> ();

ArrayList
==========
	项是object的Array
	List<UserInfo> userInfoList = new ArrayList<UserInfo> ();
